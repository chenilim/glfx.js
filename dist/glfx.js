/*
 * glfx.js
 * https://evanw.github.io/glfx.js/
 *
 * Copyright 2011 Evan Wallace
 * Released under the MIT license
 */
var fx=function(){function w(b,e){return new n(null,b+"uniform sampler2D texture;uniform vec2 texSize;varying vec2 texCoord;void main(){vec2 coord=texCoord*texSize;"+e+"gl_FragColor=texture2D(texture,coord/texSize);vec2 clampedCoord=clamp(coord,vec2(0.0),texSize);if(coord!=clampedCoord){gl_FragColor.a*=max(0.0,1.0-length(coord-clampedCoord));}}")}
function E(b){a.sepia=a.sepia||new n(null,"uniform sampler2D texture;uniform float amount;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);float r=color.r;float g=color.g;float b=color.b;color.r=min(1.0,(r*(1.0-(0.607*amount)))+(g*(0.769*amount))+(b*(0.189*amount)));color.g=min(1.0,(r*0.349*amount)+(g*(1.0-(0.314*amount)))+(b*0.168*amount));color.b=min(1.0,(r*0.272*amount)+(g*0.534*amount)+(b*(1.0-(0.869*amount))));gl_FragColor=color;}");
p.call(this,a.sepia,{amount:r(0,b,1)});return this}function F(b){a.denoise=a.denoise||new n(null,"uniform sampler2D texture;uniform float exponent;uniform float strength;uniform vec2 texSize;varying vec2 texCoord;void main(){vec4 center=texture2D(texture,texCoord);vec4 color=vec4(0.0);float total=0.0;for(float x=-4.0;x<=4.0;x+=1.0){for(float y=-4.0;y<=4.0;y+=1.0){vec4 sample=texture2D(texture,texCoord+vec2(x,y)/texSize);float weight=1.0-abs(dot(sample.rgb-center.rgb,vec3(0.25)));weight=pow(weight,exponent);color+=sample*weight;total+=weight;}}gl_FragColor=color/total;}");
for(var e=0;2>e;e++)p.call(this,a.denoise,{exponent:Math.max(0,b),texSize:[this.width,this.height]});return this}function G(b,e){a.brightnessContrast=a.brightnessContrast||new n(null,"uniform sampler2D texture;uniform float brightness;uniform float contrast;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);color.rgb+=brightness;if(contrast>0.0){color.rgb=(color.rgb-0.5)/(1.0-contrast)+0.5;}else{color.rgb=(color.rgb-0.5)*(1.0+contrast)+0.5;}gl_FragColor=color;}");
p.call(this,a.brightnessContrast,{brightness:r(-1,b,1),contrast:r(-1,e,1)});return this}function H(b,e){a.vignette=a.vignette||new n(null,"uniform sampler2D texture;uniform float size;uniform float amount;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);float dist=distance(texCoord,vec2(0.5,0.5));color.rgb*=smoothstep(0.8,size*0.799,dist*(amount+size));gl_FragColor=color;}");
p.call(this,a.vignette,{size:r(0,b,1),amount:r(0,e,1)});return this}function I(b,e){a.unsharpMask=a.unsharpMask||new n(null,"uniform sampler2D blurredTexture;uniform sampler2D originalTexture;uniform float strength;uniform float threshold;varying vec2 texCoord;void main(){vec4 blurred=texture2D(blurredTexture,texCoord);vec4 original=texture2D(originalTexture,texCoord);gl_FragColor=mix(blurred,original,1.0+strength);}");
this._.extraTexture.ensureFormat(this._.texture);this._.texture.use();this._.extraTexture.drawTo(function(){n.getDefaultShader().drawRect()});this._.extraTexture.use(1);this.triangleBlur(b);a.unsharpMask.textures({originalTexture:1});p.call(this,a.unsharpMask,{strength:e});this._.extraTexture.unuse(1);return this}function J(b,e){a.hueSaturation=a.hueSaturation||new n(null,"uniform sampler2D texture;uniform float hue;uniform float saturation;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);float angle=hue*3.14159265;float s=sin(angle),c=cos(angle);vec3 weights=(vec3(2.0*c,-sqrt(3.0)*s-c,sqrt(3.0)*s-c)+1.0)/3.0;float len=length(color.rgb);color.rgb=vec3(dot(color.rgb,weights.xyz),dot(color.rgb,weights.zxy),dot(color.rgb,weights.yzx));float average=(color.r+color.g+color.b)/3.0;if(saturation>0.0){color.rgb+=(average-color.rgb)*(1.0-1.0/(1.001-saturation));}else{color.rgb+=(average-color.rgb)*(-saturation);}gl_FragColor=color;}");
p.call(this,a.hueSaturation,{hue:r(-1,b,1),saturation:r(-1,e,1)});return this}function K(b){a.vibrance=a.vibrance||new n(null,"uniform sampler2D texture;uniform float amount;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);float average=(color.r+color.g+color.b)/3.0;float mx=max(color.r,max(color.g,color.b));float amt=(mx-average)*(-amount*3.0);color.rgb=mix(color.rgb,vec3(mx),amt);gl_FragColor=color;}");
p.call(this,a.vibrance,{amount:r(-1,b,1)});return this}function v(b){b=new y(b);for(var e=[],d=0;256>d;d++)e.push(r(0,Math.floor(256*b.interpolate(d/255)),255));return e}function L(b,e,d){b=v(b);1==arguments.length?e=d=b:(e=v(e),d=v(d));for(var f=[],g=0;256>g;g++)f.splice(f.length,0,b[g],e[g],d[g],255);this._.extraTexture.initFromBytes(256,1,f);this._.extraTexture.use(1);a.curves=a.curves||new n(null,"uniform sampler2D texture;uniform sampler2D map;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);color.r=texture2D(map,vec2(color.r)).r;color.g=texture2D(map,vec2(color.g)).g;color.b=texture2D(map,vec2(color.b)).b;gl_FragColor=color;}");
a.curves.textures({map:1});p.call(this,a.curves,{});return this}function M(b){a.noise=a.noise||new n(null,"uniform sampler2D texture;uniform float amount;varying vec2 texCoord;float rand(vec2 co){return fract(sin(dot(co.xy,vec2(12.9898,78.233)))*43758.5453);}void main(){vec4 color=texture2D(texture,texCoord);float diff=(rand(texCoord)-0.5)*amount;color.r+=diff;color.g+=diff;color.b+=diff;gl_FragColor=color;}");
p.call(this,a.noise,{amount:r(0,b,1)});return this}function N(b){a.edgeWork1=a.edgeWork1||new n(null,"uniform sampler2D texture;uniform vec2 delta;varying vec2 texCoord;float random(vec3 scale,float seed){return fract(sin(dot(gl_FragCoord.xyz+seed,scale))*43758.5453+seed);}void main(){vec2 color=vec2(0.0);vec2 total=vec2(0.0);float offset=random(vec3(12.9898,78.233,151.7182),0.0);for(float t=-30.0;t<=30.0;t++){float percent=(t+offset-0.5)/30.0;float weight=1.0-abs(percent);vec3 sample=texture2D(texture,texCoord+delta*percent).rgb;float average=(sample.r+sample.g+sample.b)/3.0;color.x+=average*weight;total.x+=weight;if(abs(t)<15.0){weight=weight*2.0-1.0;color.y+=average*weight;total.y+=weight;}}gl_FragColor=vec4(color/total,0.0,1.0);}");
a.edgeWork2=a.edgeWork2||new n(null,"uniform sampler2D texture;uniform vec2 delta;varying vec2 texCoord;float random(vec3 scale,float seed){return fract(sin(dot(gl_FragCoord.xyz+seed,scale))*43758.5453+seed);}void main(){vec2 color=vec2(0.0);vec2 total=vec2(0.0);float offset=random(vec3(12.9898,78.233,151.7182),0.0);for(float t=-30.0;t<=30.0;t++){float percent=(t+offset-0.5)/30.0;float weight=1.0-abs(percent);vec2 sample=texture2D(texture,texCoord+delta*percent).xy;color.x+=sample.x*weight;total.x+=weight;if(abs(t)<15.0){weight=weight*2.0-1.0;color.y+=sample.y*weight;total.y+=weight;}}float c=clamp(10000.0*(color.y/total.y-color.x/total.x)+0.5,0.0,1.0);gl_FragColor=vec4(c,c,c,1.0);}");
p.call(this,a.edgeWork1,{delta:[b/this.width,0]});p.call(this,a.edgeWork2,{delta:[0,b/this.height]});return this}function O(b){a.ink=a.ink||new n(null,"uniform sampler2D texture;uniform float strength;uniform vec2 texSize;varying vec2 texCoord;void main(){vec2 dx=vec2(1.0/texSize.x,0.0);vec2 dy=vec2(0.0,1.0/texSize.y);vec4 color=texture2D(texture,texCoord);float bigTotal=0.0;float smallTotal=0.0;vec3 bigAverage=vec3(0.0);vec3 smallAverage=vec3(0.0);for(float x=-2.0;x<=2.0;x+=1.0){for(float y=-2.0;y<=2.0;y+=1.0){vec3 sample=texture2D(texture,texCoord+dx*x+dy*y).rgb;bigAverage+=sample;bigTotal+=1.0;if(abs(x)+abs(y)<2.0){smallAverage+=sample;smallTotal+=1.0;}}}vec3 edge=max(vec3(0.0),bigAverage/bigTotal-smallAverage/smallTotal);gl_FragColor=vec4(color.rgb-dot(edge,edge)*strength*100000.0,color.a);}");
p.call(this,a.ink,{strength:b*b*b*b*b,texSize:[this.width,this.height]});return this}function P(b,e,d,f){a.dotScreen=a.dotScreen||new n(null,"uniform sampler2D texture;uniform vec2 center;uniform float angle;uniform float scale;uniform vec2 texSize;varying vec2 texCoord;float pattern(){float s=sin(angle),c=cos(angle);vec2 tex=texCoord*texSize-center;vec2 point=vec2(c*tex.x-s*tex.y,s*tex.x+c*tex.y)*scale;return(sin(point.x)*sin(point.y))*4.0;}void main(){vec4 color=texture2D(texture,texCoord);float average=(color.r+color.g+color.b)/3.0;gl_FragColor=vec4(vec3(average*10.0-5.0+pattern()),color.a);}");
p.call(this,a.dotScreen,{center:[b,e],angle:d,scale:Math.PI/f,texSize:[this.width,this.height]});return this}function Q(b,e,d){a.hexagonalPixelate=a.hexagonalPixelate||new n(null,"uniform sampler2D texture;uniform vec2 center;uniform float scale;uniform vec2 texSize;varying vec2 texCoord;void main(){vec2 tex=(texCoord*texSize-center)/scale;tex.y/=0.866025404;tex.x-=tex.y*0.5;vec2 a;if(tex.x+tex.y-floor(tex.x)-floor(tex.y)<1.0)a=vec2(floor(tex.x),floor(tex.y));else a=vec2(ceil(tex.x),ceil(tex.y));vec2 b=vec2(ceil(tex.x),floor(tex.y));vec2 c=vec2(floor(tex.x),ceil(tex.y));vec3 TEX=vec3(tex.x,tex.y,1.0-tex.x-tex.y);vec3 A=vec3(a.x,a.y,1.0-a.x-a.y);vec3 B=vec3(b.x,b.y,1.0-b.x-b.y);vec3 C=vec3(c.x,c.y,1.0-c.x-c.y);float alen=length(TEX-A);float blen=length(TEX-B);float clen=length(TEX-C);vec2 choice;if(alen<blen){if(alen<clen)choice=a;else choice=c;}else{if(blen<clen)choice=b;else choice=c;}choice.x+=choice.y*0.5;choice.y*=0.866025404;choice*=scale/texSize;gl_FragColor=texture2D(texture,choice+center/texSize);}");
p.call(this,a.hexagonalPixelate,{center:[b,e],scale:d,texSize:[this.width,this.height]});return this}function R(b,e,d,f){a.colorHalftone=a.colorHalftone||new n(null,"uniform sampler2D texture;uniform vec2 center;uniform float angle;uniform float scale;uniform vec2 texSize;varying vec2 texCoord;float pattern(float angle){float s=sin(angle),c=cos(angle);vec2 tex=texCoord*texSize-center;vec2 point=vec2(c*tex.x-s*tex.y,s*tex.x+c*tex.y)*scale;return(sin(point.x)*sin(point.y))*4.0;}void main(){vec4 color=texture2D(texture,texCoord);vec3 cmy=1.0-color.rgb;float k=min(cmy.x,min(cmy.y,cmy.z));cmy=(cmy-k)/(1.0-k);cmy=clamp(cmy*10.0-3.0+vec3(pattern(angle+0.26179),pattern(angle+1.30899),pattern(angle)),0.0,1.0);k=clamp(k*10.0-5.0+pattern(angle+0.78539),0.0,1.0);gl_FragColor=vec4(1.0-cmy-k,color.a);}");
p.call(this,a.colorHalftone,{center:[b,e],angle:d,scale:Math.PI/f,texSize:[this.width,this.height]});return this}function S(b,e,d){a.zoomBlur=a.zoomBlur||new n(null,"uniform sampler2D texture;uniform vec2 center;uniform float strength;uniform vec2 texSize;varying vec2 texCoord;float random(vec3 scale,float seed){return fract(sin(dot(gl_FragCoord.xyz+seed,scale))*43758.5453+seed);}void main(){vec4 color=vec4(0.0);float total=0.0;vec2 toCenter=center-texCoord*texSize;float offset=random(vec3(12.9898,78.233,151.7182),0.0);for(float t=0.0;t<=40.0;t++){float percent=(t+offset)/40.0;float weight=4.0*(percent-percent*percent);vec4 sample=texture2D(texture,texCoord+toCenter*percent*strength/texSize);sample.rgb*=sample.a;color+=sample*weight;total+=weight;}gl_FragColor=color/total;gl_FragColor.rgb/=gl_FragColor.a+0.00001;}");
p.call(this,a.zoomBlur,{center:[b,e],strength:d,texSize:[this.width,this.height]});return this}function T(b,e,d,f,g,h){a.tiltShift=a.tiltShift||new n(null,"uniform sampler2D texture;uniform float blurRadius;uniform float gradientRadius;uniform vec2 start;uniform vec2 end;uniform vec2 delta;uniform vec2 texSize;varying vec2 texCoord;float random(vec3 scale,float seed){return fract(sin(dot(gl_FragCoord.xyz+seed,scale))*43758.5453+seed);}void main(){vec4 color=vec4(0.0);float total=0.0;float offset=random(vec3(12.9898,78.233,151.7182),0.0);vec2 normal=normalize(vec2(start.y-end.y,end.x-start.x));float radius=smoothstep(0.0,1.0,abs(dot(texCoord*texSize-start,normal))/gradientRadius)*blurRadius;for(float t=-30.0;t<=30.0;t++){float percent=(t+offset-0.5)/30.0;float weight=1.0-abs(percent);vec4 sample=texture2D(texture,texCoord+delta/texSize*percent*radius);sample.rgb*=sample.a;color+=sample*weight;total+=weight;}gl_FragColor=color/total;gl_FragColor.rgb/=gl_FragColor.a+0.00001;}");
var c=d-b,l=f-e,k=Math.sqrt(c*c+l*l);p.call(this,a.tiltShift,{blurRadius:g,gradientRadius:h,start:[b,e],end:[d,f],delta:[c/k,l/k],texSize:[this.width,this.height]});p.call(this,a.tiltShift,{blurRadius:g,gradientRadius:h,start:[b,e],end:[d,f],delta:[-l/k,c/k],texSize:[this.width,this.height]});return this}function U(b){a.triangleBlur=a.triangleBlur||new n(null,"uniform sampler2D texture;uniform vec2 delta;varying vec2 texCoord;float random(vec3 scale,float seed){return fract(sin(dot(gl_FragCoord.xyz+seed,scale))*43758.5453+seed);}void main(){vec4 color=vec4(0.0);float total=0.0;float offset=random(vec3(12.9898,78.233,151.7182),0.0);for(float t=-30.0;t<=30.0;t++){float percent=(t+offset-0.5)/30.0;float weight=1.0-abs(percent);vec4 sample=texture2D(texture,texCoord+delta*percent);sample.rgb*=sample.a;color+=sample*weight;total+=weight;}gl_FragColor=color/total;gl_FragColor.rgb/=gl_FragColor.a+0.00001;}");
p.call(this,a.triangleBlur,{delta:[b/this.width,0]});p.call(this,a.triangleBlur,{delta:[0,b/this.height]});return this}function V(b,e,d){a.lensBlurPrePass=a.lensBlurPrePass||new n(null,"uniform sampler2D texture;uniform float power;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);color=pow(color,vec4(power));gl_FragColor=vec4(color);}");a.lensBlur0=a.lensBlur0||new n(null,"uniform sampler2D texture0;uniform sampler2D texture1;uniform vec2 delta0;uniform vec2 delta1;uniform float power;varying vec2 texCoord;float random(vec3 scale,float seed){return fract(sin(dot(gl_FragCoord.xyz+seed,scale))*43758.5453+seed);}vec4 sample(vec2 delta){float offset=random(vec3(delta,151.7182),0.0);vec4 color=vec4(0.0);float total=0.0;for(float t=0.0;t<=30.0;t++){float percent=(t+offset)/30.0;color+=texture2D(texture0,texCoord+delta*percent);total+=1.0;}return color/total;}void main(){gl_FragColor=sample(delta0);}");
a.lensBlur1=a.lensBlur1||new n(null,"uniform sampler2D texture0;uniform sampler2D texture1;uniform vec2 delta0;uniform vec2 delta1;uniform float power;varying vec2 texCoord;float random(vec3 scale,float seed){return fract(sin(dot(gl_FragCoord.xyz+seed,scale))*43758.5453+seed);}vec4 sample(vec2 delta){float offset=random(vec3(delta,151.7182),0.0);vec4 color=vec4(0.0);float total=0.0;for(float t=0.0;t<=30.0;t++){float percent=(t+offset)/30.0;color+=texture2D(texture0,texCoord+delta*percent);total+=1.0;}return color/total;}void main(){gl_FragColor=(sample(delta0)+sample(delta1))*0.5;}");
a.lensBlur2=a.lensBlur2||(new n(null,"uniform sampler2D texture0;uniform sampler2D texture1;uniform vec2 delta0;uniform vec2 delta1;uniform float power;varying vec2 texCoord;float random(vec3 scale,float seed){return fract(sin(dot(gl_FragCoord.xyz+seed,scale))*43758.5453+seed);}vec4 sample(vec2 delta){float offset=random(vec3(delta,151.7182),0.0);vec4 color=vec4(0.0);float total=0.0;for(float t=0.0;t<=30.0;t++){float percent=(t+offset)/30.0;color+=texture2D(texture0,texCoord+delta*percent);total+=1.0;}return color/total;}void main(){vec4 color=(sample(delta0)+2.0*texture2D(texture1,texCoord))/3.0;gl_FragColor=pow(color,vec4(power));}")).textures({texture1:1});
for(var f=[],g=0;3>g;g++){var h=d+g*Math.PI*2/3;f.push([b*Math.sin(h)/this.width,b*Math.cos(h)/this.height])}b=Math.pow(10,r(-1,e,1));p.call(this,a.lensBlurPrePass,{power:b});this._.extraTexture.ensureFormat(this._.texture);p.call(this,a.lensBlur0,{delta0:f[0]},this._.texture,this._.extraTexture);p.call(this,a.lensBlur1,{delta0:f[1],delta1:f[2]},this._.extraTexture,this._.extraTexture);p.call(this,a.lensBlur0,{delta0:f[1]});this._.extraTexture.use(1);p.call(this,a.lensBlur2,{power:1/b,delta0:f[2]});
return this}function W(b,e,d){a.matrixWarp=a.matrixWarp||w("uniform mat3 matrix;uniform bool useTextureSpace;","if(useTextureSpace)coord=coord/texSize*2.0-1.0;vec3 warp=matrix*vec3(coord,1.0);coord=warp.xy/warp.z;if(useTextureSpace)coord=(coord*0.5+0.5)*texSize;");b=Array.prototype.concat.apply([],b);if(4==b.length)b=[b[0],b[1],0,b[2],b[3],0,0,0,1];else if(9!=b.length)throw"can only warp with 2x2 or 3x3 matrix";p.call(this,
a.matrixWarp,{matrix:e?z(b):b,texSize:[this.width,this.height],useTextureSpace:d|0});return this}function X(b,e,d,f){a.bulgePinch=a.bulgePinch||w("uniform float radius;uniform float strength;uniform vec2 center;","coord-=center;float distance=length(coord);if(distance<radius){float percent=distance/radius;if(strength>0.0){coord*=mix(1.0,smoothstep(0.0,radius/distance,percent),strength*0.75);}else{coord*=mix(1.0,pow(percent,1.0+strength*0.75)*radius/distance,1.0-percent);}}coord+=center;");
p.call(this,a.bulgePinch,{radius:d,strength:r(-1,f,1),center:[b,e],texSize:[this.width,this.height]});return this}function Y(b,e){e=A.apply(null,e);b=A.apply(null,b);e=z(e);return this.matrixWarp([e[0]*b[0]+e[1]*b[3]+e[2]*b[6],e[0]*b[1]+e[1]*b[4]+e[2]*b[7],e[0]*b[2]+e[1]*b[5]+e[2]*b[8],e[3]*b[0]+e[4]*b[3]+e[5]*b[6],e[3]*b[1]+e[4]*b[4]+e[5]*b[7],e[3]*b[2]+e[4]*b[5]+e[5]*b[8],e[6]*b[0]+e[7]*b[3]+e[8]*b[6],e[6]*b[1]+e[7]*b[4]+e[8]*b[7],e[6]*b[2]+e[7]*b[5]+e[8]*b[8]])}function Z(b,e,d,f){a.swirl=a.swirl||
w("uniform float radius;uniform float angle;uniform vec2 center;","coord-=center;float distance=length(coord);if(distance<radius){float percent=(radius-distance)/radius;float theta=percent*percent*angle;float s=sin(theta);float c=cos(theta);coord=vec2(coord.x*c-coord.y*s,coord.x*s+coord.y*c);}coord+=center;");
p.call(this,a.swirl,{radius:d,center:[b,e],angle:f,texSize:[this.width,this.height]});return this}function y(b){var e=b.length;this.xa=[];this.ya=[];this.u=[];this.y2=[];b.sort(function(h,c){return h[0]-c[0]});for(var d=0;d<e;d++)this.xa.push(b[d][0]),this.ya.push(b[d][1]);this.u[0]=0;this.y2[0]=0;for(d=1;d<e-1;++d){b=this.xa[d+1]-this.xa[d-1];var f=(this.xa[d]-this.xa[d-1])/b,g=f*this.y2[d-1]+2;this.y2[d]=(f-1)/g;this.u[d]=(6*((this.ya[d+1]-this.ya[d])/(this.xa[d+1]-this.xa[d])-(this.ya[d]-this.ya[d-
1])/(this.xa[d]-this.xa[d-1]))/b-f*this.u[d-1])/g}this.y2[e-1]=0;for(d=e-2;0<=d;--d)this.y2[d]=this.y2[d]*this.y2[d+1]+this.u[d]}function A(b,e,d,f,g,h,c,l){var k=d-g,q=f-h,t=c-g,B=l-h;g=b-d+g-c;h=e-f+h-l;var C=k*B-t*q;t=(g*B-t*h)/C;k=(k*h-g*q)/C;return[d-b+t*d,f-e+t*f,t,c-b+k*c,l-e+k*l,k,b,e,1]}function z(b){var e=b[0],d=b[1],f=b[2],g=b[3],h=b[4],c=b[5],l=b[6],k=b[7];b=b[8];var q=e*h*b-e*c*k-d*g*b+d*c*l+f*g*k-f*h*l;return[(h*b-c*k)/q,(f*k-d*b)/q,(d*c-f*h)/q,(c*l-g*b)/q,(e*b-f*l)/q,(f*g-e*c)/q,(g*
k-h*l)/q,(d*l-e*k)/q,(e*h-d*g)/q]}function r(b,e,d){return Math.max(b,Math.min(e,d))}function D(b){return{_:b,loadContentsOf:function(e){a=this._.gl;this._.loadContentsOf(e)},destroy:function(){a=this._.gl;this._.destroy()}}}function aa(b){return D(u.fromElement(b))}function ba(b,e){var d=a.UNSIGNED_BYTE;if(a.getExtension("OES_texture_float")&&a.getExtension("OES_texture_float_linear")){var f=new u(100,100,a.RGBA,a.FLOAT);try{f.drawTo(function(){d=a.FLOAT})}catch(g){}f.destroy()}this._.texture&&this._.texture.destroy();
this._.spareTexture&&this._.spareTexture.destroy();this.width=b;this.height=e;this._.texture=new u(b,e,a.RGBA,d);this._.spareTexture=new u(b,e,a.RGBA,d);this._.extraTexture=this._.extraTexture||new u(0,0,a.RGBA,d);this._.flippedShader=this._.flippedShader||new n(null,"uniform sampler2D texture;varying vec2 texCoord;void main(){gl_FragColor=texture2D(texture,vec2(texCoord.x,1.0-texCoord.y));}");this._.isInitialized=!0}function ca(b,e,d){this._.isInitialized&&
b._.width==this.width&&b._.height==this.height||ba.call(this,e?e:b._.width,d?d:b._.height);b._.use();this._.texture.drawTo(function(){n.getDefaultShader().drawRect()});return this}function da(){this._.texture.use();this._.flippedShader.drawRect();return this}function p(b,e,d,f){(d||this._.texture).use();this._.spareTexture.drawTo(function(){b.uniforms(e).drawRect()});this._.spareTexture.swapWith(f||this._.texture)}function ea(b){b.parentNode.insertBefore(this,b);b.parentNode.removeChild(b);return this}
function fa(){var b=new u(this._.texture.width,this._.texture.height,a.RGBA,a.UNSIGNED_BYTE);this._.texture.use();b.drawTo(function(){n.getDefaultShader().drawRect()});return D(b)}function ha(){var b=this._.texture.width,e=this._.texture.height,d=new Uint8Array(b*e*4);this._.texture.drawTo(function(){a.readPixels(0,0,b,e,a.RGBA,a.UNSIGNED_BYTE,d)});return d}function ia(){let b=this._.texture,e=b.gl,d=new Uint8Array(b.width*b.height*4);b.use();e.defaultShader.drawRect();e.readPixels(0,0,b.width,b.height,
e.RGBA,e.UNSIGNED_BYTE,d);return d}function m(b){return function(){a=this._.gl;return b.apply(this,arguments)}}var x={};(function(){function b(){}function e(c){"OES_texture_float_linear"===c?(void 0===this.$OES_texture_float_linear$&&Object.defineProperty(this,"$OES_texture_float_linear$",{enumerable:!1,configurable:!1,writable:!1,value:new b}),c=this.$OES_texture_float_linear$):c=g.call(this,c);return c}function d(){var c=h.call(this);-1===c.indexOf("OES_texture_float_linear")&&c.push("OES_texture_float_linear");
return c}try{var f=document.createElement("canvas").getContext("experimental-webgl")}catch(c){}if(f&&-1===f.getSupportedExtensions().indexOf("OES_texture_float_linear")&&function(c){if(!c.getExtension("OES_texture_float"))return!1;var l=c.createFramebuffer(),k=c.createTexture();c.bindTexture(c.TEXTURE_2D,k);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,
c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.texImage2D(c.TEXTURE_2D,0,c.RGBA,1,1,0,c.RGBA,c.UNSIGNED_BYTE,null);c.bindFramebuffer(c.FRAMEBUFFER,l);c.framebufferTexture2D(c.FRAMEBUFFER,c.COLOR_ATTACHMENT0,c.TEXTURE_2D,k,0);l=c.createTexture();c.bindTexture(c.TEXTURE_2D,l);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.LINEAR);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.LINEAR);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);
c.texImage2D(c.TEXTURE_2D,0,c.RGBA,2,2,0,c.RGBA,c.FLOAT,new Float32Array([2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]));k=c.createProgram();var q=c.createShader(c.VERTEX_SHADER),t=c.createShader(c.FRAGMENT_SHADER);c.shaderSource(q,"attribute vec2 vertex;void main(){gl_Position=vec4(vertex,0.0,1.0);}");c.shaderSource(t,"uniform sampler2D texture;void main(){gl_FragColor=texture2D(texture,vec2(0.5));}");c.compileShader(q);c.compileShader(t);
c.attachShader(k,q);c.attachShader(k,t);c.linkProgram(k);q=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,q);c.bufferData(c.ARRAY_BUFFER,new Float32Array([0,0]),c.STREAM_DRAW);c.enableVertexAttribArray(0);c.vertexAttribPointer(0,2,c.FLOAT,!1,0,0);q=new Uint8Array(4);c.useProgram(k);c.viewport(0,0,1,1);c.bindTexture(c.TEXTURE_2D,l);c.drawArrays(c.POINTS,0,1);c.readPixels(0,0,1,1,c.RGBA,c.UNSIGNED_BYTE,q);return 127===q[0]||128===q[0]}(f)){var g=WebGLRenderingContext.prototype.getExtension,h=WebGLRenderingContext.prototype.getSupportedExtensions;
WebGLRenderingContext.prototype.getExtension=e;WebGLRenderingContext.prototype.getSupportedExtensions=d}})();y.prototype.interpolate=function(b){for(var e=0,d=this.ya.length-1;1<d-e;){var f=d+e>>1;this.xa[f]>b?d=f:e=f}f=this.xa[d]-this.xa[e];var g=(this.xa[d]-b)/f;b=(b-this.xa[e])/f;return g*this.ya[e]+b*this.ya[d]+((g*g*g-g)*this.y2[e]+(b*b*b-b)*this.y2[d])*f*f/6};var n=function(){function b(d,f){d=a.createShader(d);a.shaderSource(d,f);a.compileShader(d);if(!a.getShaderParameter(d,a.COMPILE_STATUS))throw"compile error: "+
a.getShaderInfoLog(d);return d}function e(d,f){this.texCoordAttribute=this.vertexAttribute=null;this.program=a.createProgram();f="precision highp float;"+(f||"uniform sampler2D texture;varying vec2 texCoord;void main(){gl_FragColor=texture2D(texture,texCoord);}");a.attachShader(this.program,b(a.VERTEX_SHADER,d||"attribute vec2 vertex;attribute vec2 _texCoord;varying vec2 texCoord;void main(){texCoord=_texCoord;gl_Position=vec4(vertex*2.0-1.0,0.0,1.0);}"));
a.attachShader(this.program,b(a.FRAGMENT_SHADER,f));a.linkProgram(this.program);if(!a.getProgramParameter(this.program,a.LINK_STATUS))throw"link error: "+a.getProgramInfoLog(this.program);}e.prototype.destroy=function(){a.deleteProgram(this.program);this.program=null};e.prototype.uniforms=function(d){a.useProgram(this.program);for(var f in d)if(d.hasOwnProperty(f)){var g=a.getUniformLocation(this.program,f);if(null!==g){var h=d[f];if("[object Array]"==Object.prototype.toString.call(h))switch(h.length){case 1:a.uniform1fv(g,
new Float32Array(h));break;case 2:a.uniform2fv(g,new Float32Array(h));break;case 3:a.uniform3fv(g,new Float32Array(h));break;case 4:a.uniform4fv(g,new Float32Array(h));break;case 9:a.uniformMatrix3fv(g,!1,new Float32Array(h));break;case 16:a.uniformMatrix4fv(g,!1,new Float32Array(h));break;default:throw"dont't know how to load uniform \""+f+'" of length '+h.length;}else if("[object Number]"==Object.prototype.toString.call(h))a.uniform1f(g,h);else throw'attempted to set uniform "'+f+'" to invalid value '+
(h||"undefined").toString();}}return this};e.prototype.textures=function(d){a.useProgram(this.program);for(var f in d)d.hasOwnProperty(f)&&a.uniform1i(a.getUniformLocation(this.program,f),d[f]);return this};e.prototype.drawRect=function(d,f,g,h){var c=a.getParameter(a.VIEWPORT);f=void 0!==f?(f-c[1])/c[3]:0;d=void 0!==d?(d-c[0])/c[2]:0;g=void 0!==g?(g-c[0])/c[2]:1;h=void 0!==h?(h-c[1])/c[3]:1;null==a.vertexBuffer&&(a.vertexBuffer=a.createBuffer());a.bindBuffer(a.ARRAY_BUFFER,a.vertexBuffer);a.bufferData(a.ARRAY_BUFFER,
new Float32Array([d,f,d,h,g,f,g,h]),a.STATIC_DRAW);null==a.texCoordBuffer&&(a.texCoordBuffer=a.createBuffer(),a.bindBuffer(a.ARRAY_BUFFER,a.texCoordBuffer),a.bufferData(a.ARRAY_BUFFER,new Float32Array([0,0,0,1,1,0,1,1]),a.STATIC_DRAW));null==this.vertexAttribute&&(this.vertexAttribute=a.getAttribLocation(this.program,"vertex"),a.enableVertexAttribArray(this.vertexAttribute));null==this.texCoordAttribute&&(this.texCoordAttribute=a.getAttribLocation(this.program,"_texCoord"),a.enableVertexAttribArray(this.texCoordAttribute));
a.useProgram(this.program);a.bindBuffer(a.ARRAY_BUFFER,a.vertexBuffer);a.vertexAttribPointer(this.vertexAttribute,2,a.FLOAT,!1,0,0);a.bindBuffer(a.ARRAY_BUFFER,a.texCoordBuffer);a.vertexAttribPointer(this.texCoordAttribute,2,a.FLOAT,!1,0,0);a.drawArrays(a.TRIANGLE_STRIP,0,4)};e.getDefaultShader=function(){a.defaultShader=a.defaultShader||new e;return a.defaultShader};return e}(),a;x.canvas=function(){var b=document.createElement("canvas");try{a=b.getContext("webgl",{premultipliedAlpha:!1})}catch(e){a=
null}if(!a)throw"This browser does not support WebGL";b._={gl:a,isInitialized:!1,texture:null,spareTexture:null,flippedShader:null};b.texture=m(aa);b.draw=m(ca);b.update=m(da);b.replace=m(ea);b.contents=m(fa);b.getPixelArray=m(ha);b.getPixelArray2=m(ia);b.brightnessContrast=m(G);b.hexagonalPixelate=m(Q);b.hueSaturation=m(J);b.colorHalftone=m(R);b.triangleBlur=m(U);b.unsharpMask=m(I);b.perspective=m(Y);b.matrixWarp=m(W);b.bulgePinch=m(X);b.tiltShift=m(T);b.dotScreen=m(P);b.edgeWork=m(N);b.lensBlur=
m(V);b.zoomBlur=m(S);b.noise=m(M);b.denoise=m(F);b.curves=m(L);b.swirl=m(Z);b.ink=m(O);b.vignette=m(H);b.vibrance=m(K);b.sepia=m(E);return b};x.splineInterpolate=v;var u=function(){function b(f,g,h,c){this.gl=a;this.id=a.createTexture();this.width=f;this.height=g;this.format=h;this.type=c;a.bindTexture(a.TEXTURE_2D,this.id);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.LINEAR);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE);
a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE);f&&g&&a.texImage2D(a.TEXTURE_2D,0,this.format,f,g,0,this.format,this.type,null)}function e(f){null==d&&(d=document.createElement("canvas"));d.width=f.width;d.height=f.height;f=d.getContext("2d");f.clearRect(0,0,d.width,d.height);return f}b.fromElement=function(f){var g=new b(0,0,a.RGBA,a.UNSIGNED_BYTE);g.loadContentsOf(f);return g};b.prototype.loadContentsOf=function(f){this.width=f.width||f.videoWidth;this.height=f.height||f.videoHeight;
a.bindTexture(a.TEXTURE_2D,this.id);a.texImage2D(a.TEXTURE_2D,0,this.format,this.format,this.type,f)};b.prototype.initFromBytes=function(f,g,h){this.width=f;this.height=g;this.format=a.RGBA;this.type=a.UNSIGNED_BYTE;a.bindTexture(a.TEXTURE_2D,this.id);a.texImage2D(a.TEXTURE_2D,0,a.RGBA,f,g,0,a.RGBA,this.type,new Uint8Array(h))};b.prototype.destroy=function(){a.deleteTexture(this.id);this.id=null};b.prototype.use=function(f){a.activeTexture(a.TEXTURE0+(f||0));a.bindTexture(a.TEXTURE_2D,this.id)};b.prototype.unuse=
function(f){a.activeTexture(a.TEXTURE0+(f||0));a.bindTexture(a.TEXTURE_2D,null)};b.prototype.ensureFormat=function(f,g,h,c){if(1==arguments.length){var l=arguments[0];f=l.width;g=l.height;h=l.format;c=l.type}if(f!=this.width||g!=this.height||h!=this.format||c!=this.type)this.width=f,this.height=g,this.format=h,this.type=c,a.bindTexture(a.TEXTURE_2D,this.id),a.texImage2D(a.TEXTURE_2D,0,this.format,f,g,0,this.format,this.type,null)};b.prototype.drawTo=function(f){a.framebuffer=a.framebuffer||a.createFramebuffer();
a.bindFramebuffer(a.FRAMEBUFFER,a.framebuffer);a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,this.id,0);if(a.checkFramebufferStatus(a.FRAMEBUFFER)!==a.FRAMEBUFFER_COMPLETE)throw Error("incomplete framebuffer");a.viewport(0,0,this.width,this.height);f();a.bindFramebuffer(a.FRAMEBUFFER,null)};var d=null;b.prototype.fillUsingCanvas=function(f){f(e(this));this.format=a.RGBA;this.type=a.UNSIGNED_BYTE;a.bindTexture(a.TEXTURE_2D,this.id);a.texImage2D(a.TEXTURE_2D,0,a.RGBA,a.RGBA,
a.UNSIGNED_BYTE,d);return this};b.prototype.toImage=function(f){this.use();n.getDefaultShader().drawRect();var g=this.width*this.height*4,h=new Uint8Array(g),c=e(this),l=c.createImageData(this.width,this.height);a.readPixels(0,0,this.width,this.height,a.RGBA,a.UNSIGNED_BYTE,h);for(var k=0;k<g;k++)l.data[k]=h[k];c.putImageData(l,0,0);f.src=d.toDataURL()};b.prototype.swapWith=function(f){var g=f.id;f.id=this.id;this.id=g;g=f.width;f.width=this.width;this.width=g;g=f.height;f.height=this.height;this.height=
g;g=f.format;f.format=this.format;this.format=g};return b}();return x}();
